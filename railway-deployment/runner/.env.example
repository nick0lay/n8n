# n8n Task Runners Service - Environment Variables Template
# For Railway deployment, set these in Railway Dashboard (NOT in a .env file)
#
# This file is for REFERENCE ONLY - showing what variables need to be configured
# DO NOT commit actual values to git!

# ============================================================================
# IMPORTANT: Railway Build Arguments vs Runtime Variables
# ============================================================================
#
# Railway uses environment variables for BOTH purposes:
#
# 1. BUILD-TIME (passed as --build-arg to Docker build):
#    - N8N_VERSION, JS_PACKAGES, PY_PACKAGES
#    - These install packages into the Docker image
#    - Railway automatically passes them when they match ARG declarations
#
# 2. RUNTIME (used by running container):
#    - All other variables (connection, allow-lists, performance, etc.)
#    - These configure the running service
#
# Example: JS_PACKAGES is used AT BUILD TIME to install packages,
#          JS_ALLOW_LIST is used AT RUNTIME to enable their usage
#
# Set ALL variables in Railway Dashboard → Service → Variables
#
# ============================================================================
# BUILD-TIME Variables (Install Packages - REQUIRED)
# ============================================================================
# These are passed as Docker build arguments to install packages

N8N_VERSION=latest
JS_PACKAGES=moment@2.30.1,axios@^1.7.0,lodash@^4.17.21
PY_PACKAGES=requests==2.31.0,python-dateutil==2.8.2

# ============================================================================
# Connection to n8n Task Broker (REQUIRED)
# ============================================================================
# Point to your n8n service using Railway's internal networking
# Format: http://<n8n-service-name>.railway.internal:5679
N8N_RUNNERS_TASK_BROKER_URI=http://n8n.railway.internal:5679

# Must match the token set in n8n service
# Generate: openssl rand -base64 32
# Use Railway's "Shared Variables" to sync across services
N8N_RUNNERS_AUTH_TOKEN=your_secure_random_token_here

# ============================================================================
# JavaScript Runtime Allow-Lists (REQUIRED)
# ============================================================================
# Package names WITHOUT versions - must match what's installed via build args
# Note: These enable usage at runtime, build args install the packages

# List of allowed external packages (comma-separated, no spaces)
JS_ALLOW_LIST=moment,axios,lodash

# Allowed built-in Node.js modules
NODE_FUNCTION_ALLOW_BUILTIN=crypto,fs,path

# Apply JS_ALLOW_LIST to runner (use Railway variable reference)
NODE_FUNCTION_ALLOW_EXTERNAL=${JS_ALLOW_LIST}

# ============================================================================
# Python Runtime Allow-Lists (REQUIRED)
# ============================================================================
# Package names WITHOUT versions - must match what's installed via build args
# IMPORTANT: Use IMPORT name, not package name (e.g., 'dateutil' not 'python-dateutil')

# List of allowed external packages (comma-separated, no spaces)
PY_ALLOW_LIST=requests,dateutil

# Allowed Python standard library modules
PY_STDLIB_ALLOW=json,datetime,math,random

# Apply Python allow-lists to runner (use Railway variable references)
N8N_RUNNERS_EXTERNAL_ALLOW=${PY_ALLOW_LIST}
N8N_RUNNERS_STDLIB_ALLOW=${PY_STDLIB_ALLOW}

# ============================================================================
# Performance Configuration (OPTIONAL)
# ============================================================================
# Maximum number of concurrent tasks
N8N_RUNNERS_MAX_CONCURRENCY=5

# Task execution timeout in seconds
N8N_RUNNERS_TASK_TIMEOUT=60

# ============================================================================
# Logging Configuration (OPTIONAL)
# ============================================================================
# Log level: error, warn, info, debug
N8N_RUNNERS_LAUNCHER_LOG_LEVEL=info

# ============================================================================
# Timezone Configuration (OPTIONAL)
# ============================================================================
GENERIC_TIMEZONE=America/New_York

# ============================================================================
# CRITICAL: Two-Variable System
# ============================================================================
#
# You need to configure dependencies in TWO places:
#
# 1. BUILD TIME (in railway.toml - with versions):
#    JS_PACKAGES = "moment@2.30.1,axios@^1.7.0,lodash@^4.17.21"
#    PY_PACKAGES = "requests==2.31.0,python-dateutil==2.8.2"
#    → These INSTALL the packages into the Docker image
#
# 2. RUNTIME (here in env vars - without versions):
#    JS_ALLOW_LIST = moment,axios,lodash
#    PY_ALLOW_LIST = requests,dateutil
#    → These ENABLE the packages for use in Code nodes
#
# Package names must match between build and runtime (watch for install vs import names!)
#
# Example Update Workflow:
# ========================
# 1. Edit railway.toml build args to add new package with version
#    JS_PACKAGES = "moment@2.30.1,axios@^1.7.0,lodash@^4.17.21,uuid@^9.0.0"
#
# 2. Add package name (without version) to Railway Dashboard env var
#    JS_ALLOW_LIST = moment,axios,lodash,uuid
#
# 3. Commit railway.toml change → Railway rebuilds with new package
#
# 4. New package is now installed AND allowed for use
#
# ============================================================================
# Common Package Name Differences
# ============================================================================
# Python packages where install name ≠ import name:
#
# Install Name          → Import Name (use in allow-list)
# -----------------------------------------------------
# python-dateutil       → dateutil
# beautifulsoup4        → bs4
# scikit-learn          → sklearn
# Pillow                → PIL
#
# ============================================================================
# Security Notes
# ============================================================================
#
# BLOCKED IMPORTS (by design - cannot be overridden):
# - Python: sys, subprocess, os, __import__
# - JavaScript: process object, eval, Function constructor
#
# These restrictions are n8n security features to prevent:
# - System access
# - Arbitrary code execution
# - Process manipulation
#
# Design your workflows around these restrictions.
# Use allowed packages for functionality (e.g., requests instead of subprocess + curl)
#
